#!/usr/bin/env python3

import sys

def read_numbers_from_file(file_path):
    with open(file_path, 'r') as f:
        return [int(line.strip()) for line in f]

def trial_division(n):
    for i in [2, 3]:
        if n % i == 0:
            return n // i, i  # Return larger factor first
    return None, None

def pollards_rho(n):
    x, y, c = 2, 2, 1
    while True:
        x = (x * x + 1) % n
        y = (y * y + 1) % n
        y = (y * y + 1) % n
        d = abs(x - y)
        f = n // d  # Find the larger factor
        if d > 1:
            return f, d  # Return larger factor first

def factorize(n):
    a, b = trial_division(n)
    if a is not None:
        return a, b

    a, b = pollards_rho(n)
    if a is not None:
        return a, b

    return None, None

def main():
    if len(sys.argv) < 2:
        print("Usage: factors <file>")
        return

    file_path = sys.argv[1]
    numbers = read_numbers_from_file(file_path)

    for n in numbers:
        p, q = factorize(n)
        if p is None or q is None:
            print(f"Failed to factor {n}")
        else:
            print(f"{n}={p}*{q}")

if __name__ == "__main__":
    main()
