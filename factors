#!/usr/bin/env python3

import sys
import math

def read_numbers_from_file(file_path):
    with open(file_path, 'r') as f:
        return [int(line.strip()) for line in f]

def gcd(a, b):
    while b:
        a, b = b, a % b
    return abs(a)

def trial_division(n):
    for i in [2, 3, 5, 7, 11, 13, 17, 19, 23]:
        if n % i == 0:
            return i, n // i
    return None, None

def pollards_rho(n):
    x, y, c = 2, 2, 1
    while True:
        x = (x * x + 1) % n
        y = (y * y + 1) % n
        y = (y * y + 1) % n
        d = gcd(abs(x - y), n)
        if d > 1:
            return d

def factorize(n):
    a, b = trial_division(n)
    if a is not None:
        return a, b

    d = pollards_rho(n)
    if d is not None:
        return d, n // d

    return None, None

def main():
    if len(sys.argv) < 2:
        print("Usage: factors <file>")
        return

    file_path = sys.argv[1]
    numbers = read_numbers_from_file(file_path)

    for n in numbers:
        p, q = factorize(n)
        if p is None or q is None:
            print(f"Failed to factor {n}")
        else:
            print(f"{n}={p}*{q}")

if __name__ == "__main__":
    main()
